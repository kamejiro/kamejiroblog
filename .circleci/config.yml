version: 2.1

orbs:
  ruby: circleci/ruby@1.1.2
  node: circleci/node@2
  heroku: circleci/heroku@1.2.6

#setup
commands:
  setup:
    steps:
      - checkout
      - ruby/install-deps
      - node/install-packages:
          pkg-manager: yarn
          cache-key: "yarn.lock"

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7-node
    steps:
      - setup
  test:
    docker:
      - image: circleci/ruby:2.7-node
      - image: circleci/postgres:11.6-alpine
        name: "db"
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: myapp_test
          POSTGRES_PASSWORD: ""
    environment: 
      BUNDLE_JOBS: "4"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: postgres
      PGPASSWORD: ""
      RAILS_ENV: test
    steps:
      - setup
      - run:
          name: rails db:create
          command: bundle exec rails db:create
      - run:
          name: rails db:migrate
          command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: rails test
          command: bundle exec rails test

  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - setup_remote_docker
      - heroku/push-docker-image
      - heroku/release-docker-image
  #     - run:
  #         name: heroku maintenance on
  #         command: heroku maintenance:on --app ${HEROKU_APP_NAME}
  #     - run:
  #         name: Deploy to Heroku_Production
  #         command: |
  #           git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
  #     - run:
  #         name: export rails master key
  #         command: |
  #           export RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
  #     - run:
  #         name: db migration
  #         command: |
  #           heroku run rails db:migrate --app ${HEROKU_APP_NAME}
  #     - run:
  #         name: heroku maintenance off
  #         command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master